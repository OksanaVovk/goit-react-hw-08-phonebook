{"version":3,"file":"static/js/374.d357cf8f.chunk.js","mappings":"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","sources":["components/ContactForm.js","components/Filter.js","components/ContactItem.js","components/ContactList.js","Pages/Contacts.js"],"sourcesContent":["import 'react-native-get-random-values';\nimport { useFetchContactsQuery } from 'redux/reducer';\nimport { useState } from 'react';\nimport { useAddContactMutation } from 'redux/reducer';\nimport Spinner from './Spinner';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst themes = createTheme();\n\nexport default function ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const { data } = useFetchContactsQuery();\n\n  const [createContact, { isLoading }] = useAddContactMutation();\n\n  const handleInputChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (data) {\n      const isRepead = data.some(contact =>\n        contact.name.toLowerCase().includes(name.toLowerCase())\n      );\n      if (isRepead) {\n        Notify.failure(`${name} is already in contacts`);\n      } else {\n        try {\n          await createContact({ name: name, number: number });\n          Notify.success('A new contact has been successfully created');\n        } catch {\n          console.log(Error);\n          Notify.warning('Contact could not be saved');\n        }\n      }\n      reset();\n    } else {\n      try {\n        await createContact({ name: name, number: number });\n        Notify.success('A new contact has been created');\n      } catch {\n        console.log(Error);\n        Notify.warning('Contact could not be saved');\n      }\n      reset();\n    }\n  };\n\n  return (\n    <ThemeProvider theme={themes}>\n      <Container\n        component=\"div\"\n        maxWidth=\"xs\"\n        sx={{\n          marginLeft: 0,\n          marginRight: 0,\n        }}\n      >\n        <CssBaseline />\n        <Typography component=\"h1\" variant=\"h5\" fontWeight=\"bold\">\n          PhoneBook\n        </Typography>\n        <Box\n          sx={{\n            marginTop: 4,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'start',\n          }}\n        >\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <label>\n              Name\n              <TextField\n                margin=\"normal\"\n                width=\"100%\"\n                id=\"name\"\n                autoFocus\n                type=\"text\"\n                value={name}\n                name=\"name\"\n                onChange={handleInputChange}\n                required\n              />\n            </label>\n            <label>\n              Number\n              <TextField\n                margin=\"normal\"\n                fullWidth\n                id=\"phone\"\n                autoComplete=\"phone\"\n                autoFocus\n                type=\"tel\"\n                value={number}\n                name=\"phone\"\n                onChange={handleInputChange}\n                required\n              />\n            </label>\n            <Button\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              className=\"main_button\"\n              type=\"submit\"\n              disabled={isLoading}\n            >\n              {isLoading && <Spinner />}\n              Add contact\n            </Button>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport SearchIcon from '@mui/icons-material/Search';\n\nconst Filter = ({ id, value, onChange }) => (\n  <Box\n    sx={{\n      width: 500,\n      maxWidth: '100%',\n      padding: '20px 24px',\n    }}\n  >\n    <Typography\n      component=\"h1\"\n      variant=\"h5\"\n      fontWeight=\"bold\"\n      marginTop=\"32px\"\n      marginBottom=\"32px\"\n    >\n      Contacts\n    </Typography>\n    <TextField\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <SearchIcon />\n          </InputAdornment>\n        ),\n      }}\n      fullWidth\n      label=\"Find contacts by name\"\n      id={id}\n      type=\"text\"\n      value={value}\n      name=\"filter\"\n      onChange={onChange}\n    />\n  </Box>\n);\n\nexport default Filter;\n","import React from 'react';\nimport { useDeleteContactMutation } from 'redux/reducer';\nimport Tooltip from '@mui/material/Tooltip';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { useDispatch } from 'react-redux';\nimport { changeContact, toggleModal } from 'redux/actions';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport ModeEditOutlinedIcon from '@mui/icons-material/ModeEditOutlined';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const onBtnClick = async id => {\n    try {\n      await deleteContact(id);\n      Notify.success('The contact has been deleted');\n    } catch {\n      console.log(Error);\n      Notify.warning('Deletion error');\n    }\n  };\n\n  const onBtnEditClick = (id, name, number) => {\n    dispatch(toggleModal(true));\n    dispatch(changeContact({ id: id, name: name, number: number }));\n  };\n\n  return (\n    <ListItem\n      key={id}\n      secondaryAction={\n        <ListItemAvatar>\n          <Tooltip title=\"Edit\">\n            <IconButton\n              edge=\"end\"\n              aria-label=\"edit\"\n              onClick={() => onBtnEditClick(id, name, number)}\n            >\n              <ModeEditOutlinedIcon />\n            </IconButton>\n          </Tooltip>\n          <Tooltip title=\"Delete\">\n            <IconButton\n              edge=\"end\"\n              aria-label=\"delete\"\n              onClick={() => onBtnClick(id)}\n              disabled={isDeleting}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </Tooltip>\n        </ListItemAvatar>\n      }\n    >\n      <ListItemText>\n        {name}:<span>{number}</span>\n      </ListItemText>\n    </ListItem>\n  );\n};\n\nexport default ContactItem;\n","import ContactItem from './ContactItem';\nimport List from '@mui/material/List';\nimport Box from '@mui/material/Box';\nimport Grid from '@mui/material/Grid';\nimport React from 'react';\n\nconst ContactList = ({ contactArray }) => (\n  <Box sx={{ flexGrow: 1, maxWidth: 500 }} paddingLeft=\"8px\">\n    <Grid>\n      <Grid item xs={12} md={6}>\n        <List>\n          {contactArray.map(contact => (\n            <ContactItem\n              id={contact.id}\n              name={contact.name}\n              number={contact.number}\n            />\n          ))}\n        </List>\n      </Grid>\n    </Grid>\n  </Box>\n);\n\nexport default ContactList;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from '../redux/actions';\nimport { useFetchContactsQuery } from 'redux/reducer';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\nimport 'react-native-get-random-values';\nimport { nanoid } from 'nanoid';\nimport { Box } from 'components/Box';\n\nexport const Contacts = () => {\n  const { data } = useFetchContactsQuery();\n  const valueFilter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n\n  let filtId = nanoid();\n\n  const handleFilterChange = event => {\n    dispatch(changeFilter(event.currentTarget.value));\n  };\n\n  const getVisiableContacts = () => {\n    if (data) {\n      const normalizedFilter = valueFilter.toLowerCase();\n      return data.filter(contact =>\n        contact.name.toLowerCase().includes(normalizedFilter)\n      );\n    }\n  };\n\n  const visiableContacts = getVisiableContacts();\n\n  return (\n    <Box as=\"main\" padding=\"40px\">\n      <ContactForm />\n      <Filter id={filtId} value={valueFilter} onChange={handleFilterChange} />\n      {data && (\n        <ContactList contactArray={valueFilter ? visiableContacts : data} />\n      )}\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["themes","createTheme","ContactForm","useState","name","setName","number","setNumber","data","useFetchContactsQuery","useAddContactMutation","createContact","isLoading","handleInputChange","event","currentTarget","value","reset","handleSubmit","preventDefault","some","contact","toLowerCase","includes","Notify","console","log","Error","ThemeProvider","theme","Container","component","maxWidth","sx","marginLeft","marginRight","CssBaseline","Typography","variant","fontWeight","Box","marginTop","display","flexDirection","alignItems","onSubmit","noValidate","mt","TextField","margin","width","id","autoFocus","type","onChange","required","fullWidth","autoComplete","Button","mb","className","disabled","Spinner","padding","marginBottom","InputProps","startAdornment","InputAdornment","position","Search","label","dispatch","useDispatch","useDeleteContactMutation","deleteContact","isDeleting","onBtnClick","ListItem","secondaryAction","ListItemAvatar","Tooltip","title","IconButton","edge","onClick","toggleModal","changeContact","onBtnEditClick","ModeEditOutlined","Delete","ListItemText","contactArray","flexGrow","paddingLeft","Grid","item","xs","md","List","map","Contacts","valueFilter","useSelector","state","filter","filtId","nanoid","visiableContacts","normalizedFilter","getVisiableContacts","as","changeFilter"],"sourceRoot":""}